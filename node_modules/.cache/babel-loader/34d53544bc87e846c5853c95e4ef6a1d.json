{"ast":null,"code":"var _jsxFileName = \"/Users/mudasir/workspace/proj/girhubSeacher/src/components/SearchForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from \"styled-components\";\nimport { css } from \"emotion\";\nimport { clearData } from '../actions/searchActions';\nimport { fetchUsers } from '../actions/userActions';\nimport { fetchRepos } from '../actions/repoActions';\nimport logo from \"../assets/img/git.svg\";\nimport arrow from '../assets/img/down_caret.png';\nconst Wrapper = styled.div(props => ({\n  width: \"600px\",\n  margin: \"0px auto\"\n}));\nconst Logo = styled.h3(props => ({\n  display: \"flex\",\n  alignItems: \"baseline\"\n}));\nconst Heading = styled.div(props => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"baseline\"\n}));\n\nconst SearchForm = () => {\n  const [listValue, setlistValue] = useState('users');\n  const [text, setText] = useState('');\n  const [plc, setPlc] = useState('Start typing to search users ..');\n  const dataList = useSelector(state => state.data.data);\n  const dispatch = useDispatch();\n\n  const changeText = event => {\n    setText(event.target.value);\n  };\n\n  const changeListView = event => {\n    setText('');\n    setlistValue(event.target.value);\n    setPlc(event.target.value === 'users' ? 'Start typing to search users ..' : 'Start typing to search repos ..');\n    dispatch(clearData());\n  };\n\n  const updateData = () => {\n    if (text.length > 2) {\n      listValue === \"users\" ? dispatch(fetchUsers(text)) : dispatch(fetchRepos(text));\n    } else if (dataList.length) {\n      dispatch(clearData());\n    }\n  };\n\n  useEffect(() => {\n    updateData();\n  }, [text]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Logo\",\n    width: \"40px\",\n    style: {\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"font\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"GitHub Searcher\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"detail-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Search users or repositories below\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: css`\n            display: flex;\n          `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-box\",\n    name: \"text\",\n    placeholder: plc,\n    onChange: changeText,\n    value: text,\n    className: css`\n              flex-grow: 1;\n              border: 1px solid #efefef;\n              padding: 10px;\n            `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"listValue\",\n    className: \"select-box\",\n    value: listValue,\n    onChange: changeListView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \" Users \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"repos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \" Repos \")))));\n};\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/mudasir/workspace/proj/girhubSeacher/src/components/SearchForm.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styled","css","clearData","fetchUsers","fetchRepos","arrow","Wrapper","div","props","width","margin","Logo","h3","display","alignItems","Heading","flexDirection","SearchForm","listValue","setlistValue","text","setText","plc","setPlc","dataList","state","data","dispatch","changeText","event","target","value","changeListView","updateData","length","logo","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport styled from \"styled-components\";\nimport { css } from \"emotion\";\nimport { clearData } from '../actions/searchActions';\nimport { fetchUsers } from '../actions/userActions';\nimport { fetchRepos } from '../actions/repoActions';\n\nimport logo from '../assets/img/git.svg';\nimport arrow from '../assets/img/down_caret.png';\n\nconst Wrapper = styled.div((props) => ({\n  width: \"600px\",\n  margin:\"0px auto\"\n}));\nconst Logo = styled.h3((props) => ({\n  display: \"flex\",\n  alignItems: \"baseline\"\n}));\nconst Heading = styled.div((props) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"baseline\",\n}));\n\nconst SearchForm = () => {\n\n  const [listValue, setlistValue] = useState('users');\n  const [text, setText] = useState('');\n  const [plc, setPlc] = useState('Start typing to search users ..');\n  const dataList = useSelector((state) => state.data.data);\n  const dispatch = useDispatch();\n\n  const changeText = (event) => {\n    setText(event.target.value)\n  }\n\n  const changeListView = (event) => {\n    setText('')\n    setlistValue(event.target.value)\n    setPlc(event.target.value === 'users' ? 'Start typing to search users ..' : 'Start typing to search repos ..')\n    dispatch(clearData())\n  }\n\n  const updateData = () => {\n    if(text.length > 2) {\n      listValue === \"users\" ? dispatch(fetchUsers(text)) : dispatch(fetchRepos(text));\n    }  \n    else if(dataList.length) {\n      dispatch(clearData())\n    }\n  };\n\n  useEffect(()=>{\n    updateData();\n  },[text])\n\n  return (\n    <div>\n      <Wrapper>\n        <Heading>\n          <Logo>\n            <img\n              src={logo}\n              alt=\"Logo\"\n              width=\"40px\"\n              style={{ marginTop: \"5px\" }}\n            />\n            <font>GitHub Searcher</font>\n          </Logo>\n          <p className=\"detail-text\">Search users or repositories below</p>\n        </Heading>\n        <form\n          className={css`\n            display: flex;\n          `}\n        >\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            name=\"text\"\n            placeholder={plc}\n            onChange={changeText}\n            value={text}\n            className={css`\n              flex-grow: 1;\n              border: 1px solid #efefef;\n              padding: 10px;\n            `}\n          />\n          <select\n            name=\"listValue\"\n            className=\"select-box\"\n            value={listValue}\n            onChange={changeListView}\n          >\n            <option value=\"users\"> Users </option>\n            <option value=\"repos\"> Repos </option>\n          </select>\n        </form>\n      </Wrapper>\n    </div>\n  );  \n}\n\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}