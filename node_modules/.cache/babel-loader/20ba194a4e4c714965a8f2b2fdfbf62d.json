{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['data'],\n  whitelist: ['userStorage', 'repoStorage']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [thunk];\nconst initialState = {};\nexport const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport const persistedStore = persistStore(store);","map":{"version":3,"sources":["/Users/mudasir/workspace/proj/girhubSeacher/src/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","persistStore","persistReducer","storage","persistConfig","key","blacklist","whitelist","persistedReducer","middleware","initialState","store","persistedStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,aAAhB;AAJS,CAAtB;AAOA,MAAMC,gBAAgB,GAAGN,cAAc,CAACE,aAAD,EAAgBJ,WAAhB,CAAvC;AAEA,MAAMS,UAAU,GAAG,CAACX,KAAD,CAAnB;AACA,MAAMY,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,KAAK,GAAGf,WAAW,CAC9BY,gBAD8B,EAE9BE,YAF8B,EAG9BX,mBAAmB,CAACF,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHW,CAAzB;AAMP,OAAO,MAAMG,cAAc,GAAGX,YAAY,CAACU,KAAD,CAAnC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['data'],\n  whitelist: ['userStorage', 'repoStorage'],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst middleware = [thunk];\nconst initialState = {};\n\nexport const store = createStore(\n  persistedReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport const persistedStore = persistStore(store);\n\n"]},"metadata":{},"sourceType":"module"}